version: '2'
services:
    # proxy used to load balance
    # balancer:
    #     image: formandsystem/balancer:0.1
    #     ports:
    #         - "80:80"
    #     networks:
    #         - appnet
    proxy:
        image: nginx
        container_name: fs-proxy
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/nginx/certs
            - /etc/nginx/vhost.d
            - /usr/share/nginx/html
            - "../../../volumes/proxy/certs:/etc/nginx/certs:ro"
        networks:
            - appnet
    #nginx gen
    nginx-gen:
        image: jwilder/docker-gen
        container_name: nginx-gen
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
            - "../../../volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
        volumes_from:
            - proxy
        entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    # lets encrypt
    letsencrypt-nginx-proxy-companion:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: letsencrypt-nginx-proxy-companion
        volumes_from:
            - proxy
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "../../../volumes/proxy/certs:/etc/nginx/certs:rw"
        environment:
        - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    # webserver
    webserver:
        image: shippingdocker/nginx:latest
        volumes:
            - ./cms:/var/www/html
        networks:
            - appnet
        environment:
            - VIRTUAL_HOST=cms.dev
            - VIRTUAL_NETWORK=appnet
            - VIRTUAL_PORT=80
            - LETSENCRYPT_HOST=cms.dev
            - LETSENCRYPT_EMAIL=einlukas@gmx.de
    # php
    php:
        image: shippingdocker/php:latest
        container_name: fs-php
        volumes:
            - ./cms:/var/www/html
        networks:
            - appnet
    # session & cache
    redis:
        container_name: fs-redis
        image: redis:alpine
        networks:
            - appnet
    # mysql db
    db:
        image: mysql:latest
        container_name: fs-db
        ports:
            - "3366:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: cmsdb
            MYSQL_USER: root
            MYSQL_PASSWORD: root
        volumes:
            - data:/var/lib/mysql
        networks:
            - appnet
# used for interal communication within docker
networks:
    appnet:
        driver: "bridge"
# used to store and persist data
volumes:
    data:
        driver: "local"
