# don't redirect proxy
proxy_redirect  off;
# turn off global logging
access_log off;
# globally enable gzip
include /etc/nginx/includes/gzip.conf
# catch all to not allow unwanted domains
include /etc/nginx/includes/catch.conf;
# general ssl parameters
include /etc/nginx/includes/ssl-params.conf;
# logging format
log_format compression '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" "$gzip_ratio"';
############################
## redirect all 80 to 443

server {
    listen 80;
    listen [::]:80;
    server_name api.lukasoppermann.com;
    # config for .well-known
    include /etc/nginx/includes/letsencrypt.conf;

    location / {
        return         301 https://$host$uri;
    }
}
server {
    listen 80;
    listen [::]:80;
    server_name cms.lukasoppermann.com;
    # config for .well-known
    include /etc/nginx/includes/letsencrypt.conf;

    location / {
        return         301 https://$host$uri;
    }
}

############################
## api
upstream api.lukasoppermann.com {
    least_conn;
    server api_nginx_1;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name api.lukasoppermann.com;
    ssl_certificate /etc/letsencrypt/live/api.lukasoppermann.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.lukasoppermann.com/privkey.pem;
    # access_log & proxy_pass config
    include /etc/nginx/includes/proxy-pass.conf;
    # set expire header for static files
    include /etc/nginx/includes/expire_header.conf;


    root         /var/www/html;
}

############################
## cms
upstream cms.lukasoppermann.com {
    least_conn;
    server cms_nginx_1;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name cms.lukasoppermann.com;
    ssl_certificate /etc/letsencrypt/live/cms.lukasoppermann.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cms.lukasoppermann.com/privkey.pem;
    # access_log & proxy_pass config
    include /etc/nginx/includes/proxy-pass.conf;
    # set expire header for static files
    include /etc/nginx/includes/expire_header.conf;
    
    root         /var/www/html;
}
