#
#
#
#
#
# PRODUCTION
#
#
#
#
#
#
version: '2'
services:
    nginx:
        #image: nginx
        build: ./proxy
        container_name: nginx
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/vhost.d:/etc/nginx/vhost.d
            - ./nginx/html:/usr/share/nginx/html
            - ./nginx/certs:/etc/nginx/certs:ro
            - ./nginx/proxy.conf:/etc/nginx/proxy.conf:ro
        ports:
            - "80:80"
            - "443:443"
        networks:
            - appnet
    #nginx gen
    nginx-gen:
        image: jwilder/docker-gen
        container_name: nginx-gen
        command: "-notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/nginx/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"
        volumes_from: [nginx]
        volumes:
            - ./docker-gen/templates/nginx.prod.two.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
            - /var/run/docker.sock:/tmp/docker.sock:ro
        networks:
            - appnet
    nginx-letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: nginx-letsencrypt
        links: [nginx-gen]
        volumes_from: [nginx]
        volumes:
            - ./nginx/certs:/etc/nginx/certs
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
        networks:
            - appnet

# used for interal communication within docker
networks:
    appnet:
        driver: "bridge"
# used to store and persist data
volumes:
    basedata:
        driver: "local"
